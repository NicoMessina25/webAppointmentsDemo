@import 'mixins', 'fontFamilies', 'colors';

* {
    margin: 0;
    padding: 0;
    font-family: $primaryFont;
    font-style: normal;

}

body {
    background-color: $contrast; // map-get($lightBase, baseContrast);
    font-size: 100%; //75%
}

.flexible--row {
    display: flex;
    flex-direction: row;
}

.flexible--rowWrap {
    display: flex;
    flex-flow: row wrap;
}

.flexible--rowReverse {
    display: flex;
    flex-direction: row-reverse;
}

.flexible--column {
    display: flex;
    flex-direction: column;
}

.flexible--columnReverse {
    display: flex;
    flex-direction: column-reverse;
}

.flexible--columnWrap {
    display: flex;
    flex-flow: column wrap;
}

a {
    text-decoration: none;

}

.marginButton {
    margin: 4px !important;
}

.button {
    @extend.marginButton;
    font-size: 100% !important;
    width: fit-content;
    transition: all .5s !important;
    padding: 0.65rem 1.083rem !important; //0.35rem 0.583rem 

    &:hover {
        transform: scale(1.01, 1.01);
    }

    
}

.buttonMain {
    @extend.button;
    color: $contrast !important;
    background-color: map-get($lightPrimary, main) !important;
    border: 0 !important;

    &:hover {
        background-color: map-get($lightPrimary, text) !important;
    }

    

}

.buttonMain2 {
    @extend.button;
    color: map-get($lightPrimary, main) !important;
    background-color: $contrast !important;
    border: 1px solid map-get($lightPrimary, main)!important;
    &:hover {
        color: $contrast !important;
        background-color: map-get($lightPrimary, main) !important;
        border: 2px solid map-get($lightPrimary, main) !important;
    }

}

.margin-0{
    margin: 0px !important;
}

.buttonMain3 {
    @extend.button;
    color: map-get($lightPrimary, text) !important;
    background-color: map-get($lightContrastShade, 5) !important;
    border: 0px !important;

    &:hover {
        background-color: map-get($lightContrastShade, 20) !important;
    }
}

.inputContainer {
    width: 100%;
    font-weight: 500;
    color: #1b2b41b8;
    font-size: 100%;
    

    input,
    .p-dropdown {
        margin: 4px 0% 8px 0% !important;
    }

}




input,
.p-dropdown {

    background-color: map-get($lightContrastShade, 10) !important;
    border: 0 !important;
    color: map-get($lightText, body) !important;
    font-weight: 500 !important;
    width: 100% !important;
    font-size: 100% !important;

}



.checkboxContainer {
    width: 30%;
    color: map-get($lightContrastShade, 90);
    font-weight: 400;
    justify-content: space-around;

}

.checkboxLabel {
    margin-left: 7px !important;
}


.p-checkbox-box {
    background-color: map-get($lightContrastShadeTransparent, 20) !important;
    border: 0 !important;
    width: 22px !important;
    height: 22px !important;
}

.p-checkbox-checked {
    background-color: map-get($lightPrimary, main) !important;
    border-radius: 4px !important;
    width: 22px !important;
    height: 22px !important;
}



.linkContainer {
    width: 50%;
    justify-content: flex-end;


}

.link {
    color: map-get($lightPrimary, main);
    font-size: 100%;
    font-weight: 400;
    text-decoration: underline
}

.linkInfo {
    @extend.link;
    color: map-get($lightInfo, text);
}



.text {
    text-align: justify;
    color: map-get($lightText, secondary)
}

.textDarkItalic {
    @extend .textDark;
    font-style: italic;
}


.textDark{
    @extend.text;color: map-get($lightText, body) !important;
}

.textWhite{
    @extend.text;
    color:map-get($lightBase,main);
}


.p-inputtext{
    @extend.textDark;
}


.textHeading {
    @extend.text;
    color: map-get($lightText, heading);
}

.infoText {
    @extend.text;
    color: map-get($lightInfo, text);
}

.textBold {
    @extend.text;
    font-weight: 600;
    
}

.errorText{
    @extend.text;
    color: map-get($lightError, text);
}

.warningText{
    @extend.text;
    color: map-get($lightWarning, text);
}

.statusText{
    font-weight: 500;
    text-align: center
}

.observedStatusText{
    @extend.statusText;
    text-decoration: underline;
}

.logoSite {
    width: auto;
    height: 7%;
}

.textTertiary {
    @extend.text;
    color: map-get($lightText , tertiary)
}



.highlight {
    color: map-get($lightPrimary, main) !important;
    background: map-get($lightPrimary, transparent15) !important;
}

.p-calendar {
    margin: 4px 0% 8px 0% !important;

    .p-inputtext {
        font-size: 100% !important; //75%
        margin: 0 !important;
    }
}

.p-datepicker {


    /* td, th, button,span{
        font-size: 80% !important;
    } */

    .p-highlight {
        @extend.highlight;
    }

    

    button:focus,
    span:focus {
        box-shadow: 0 0 0 .1rem map-get($lightPrimary, transparent50) !important;
    }
}

.p-calendar{
    .p-button-icon-only{
        border: 0;
        background-color: map-get($lightPrimary, main) !important;

        &:hover{
            background-color: map-get($lightPrimary, text) !important;
        }
    }
}


.p-dropdown-items {
    .p-dropdown-item.p-highlight {
        @extend.highlight;
    }
}

.p-link {
    &:hover {
        color: map-get($lightPrimary, main) !important;
    }
}

.flex-end {
    justify-content: flex-end;
}


.p-button,
.p-inputtext {

    &:focus {
        box-shadow: 0 0 0 .2rem map-get($lightPrimary, transparent50) !important;
    }
}

.p-dropdown-label {
    font-size: 100% !important;
}

.p-dropdown-label.p-placeholder{
    color: #6c757d !important;
}


.p-focus {
    box-shadow: 0 0 0 .2rem map-get($lightPrimary, transparent50) !important;
}

.label {
    color: map-get($lightText, secondary);
    font-weight: 500;

}

.whiteLabel{
    color:map-get($lightBase,main);
    font-weight: 500;
    
}

.inputLabel{
    margin: 1% 0%;
}

.buttonContainer{
    margin: 3% 0%;
    justify-content: space-evenly
}

.linkReactRouter {
    //@extend.marginButton;
}

.radioGroup{
    width: 100%;
    justify-content: space-evenly;
    margin: 4px 0% 8px 0% !important;
}

.form-style{
    width:100%;
    height: 100%;
    padding: 1%;
    background-color: map-get($lightContrastShadeTransparent, 5);
    
    p{
       margin-bottom: 4px; 
    }
}

.line-bottom{
    border-bottom: 2px solid map-get($lightContrastShadeTransparent, 40) !important;
    padding-bottom: 8px;
    margin-bottom: 16px;
}

.title-color{
    color: map-get($lightContrastShadeTransparent,100);
}


.header-view-2{
    justify-content: space-around;
    align-items: center;
    margin-bottom: 16px;
    .header-container{
        align-items: center;
        width: 100%;
    }

    .iconify{
        color : map-get($lightInfo, text);
    }
    .header-title{
        width: 100%;
        margin-left: 2%;
        font-size: 28px;
    }

    .buttonWidth--maxContent{
        min-width: max-content; 
    }
}

.header-view-3{
    @extend.header-view-2;
    justify-content: flex-start;
}


/* 
    esta clase es para la contrase√±a invalida
*/
.p-invalid {
    .p-inputtext {
        background-color: map-get($lightError, main) !important;

    }

}

/* 
esta clase es para el input text invalido
 */
.p-inputtext.p-invalid {
    background-color: map-get($lightError, main) !important;
}

.combobox {
    margin: 0px 16px 0px 0px;
}

.p-dialog-header-icon:focus {
    box-shadow: none !important;
}

.p-dropdown-trigger {
    width: 0rem !important;
    opacity: 0;
}

/* .pi::before{
    font-size: 75%;
    display: flex;
    align-items: center;
} */

/* .p-autocomplete-dd{
    .p-autocomplete-input{
        margin: 0 !important;
    }
} */

.p-password {
    .p-inputtext {
        font-size: 100% !important; //75%
    }

}

.p-autocomplete-dropdown {
    margin: 2% 0% !important;
}

.p-dropdown-panel {
    //font-size: 75% !important;
    max-width: 500px !important;

}

.caption {
    font-size: smaller;
    color: map-get($lightText, secondary);
}

.caption-invalid {
    @extend.caption;
    color: map-get($lightError, text);
}

.whiteSpinner {
    .p-progress-spinner-circle {
        stroke: $contrast !important;

    }

}

.primarySpinner {
    .p-progress-spinner-circle {
        stroke: map-get($lightPrimary, main);

    }

}

.p-datatable{
    td{
        text-align: center !important;
        justify-content: center;
    }
}

.p-datatable-thead{
    background-color: $contrast !important;
    th{
        background-color: map-get($lightPrimary, transparent15) !important;
        font-size: 90% !important;
        color: map-get($lightText, secondary) !important;
        font-weight: 600 !important;
        padding: 2% 3% !important;
        margin: 0 0.2%;
    }

}

.grey-background{
    background-color: map-get($lightInfo,transparent60);
}
.p-datatable{
    td{
        text-align: center !important;
        justify-content: center;
    }
}

.p-datatable-thead{
    background-color: $contrast !important;
    th{
        background-color: map-get($lightPrimary, transparent15) !important;
        font-size: 90% !important;
        color: map-get($lightText, secondary) !important;
        font-weight: 600 !important;
        padding: 2% 3% !important;
        margin: 0 0.2%;
    }

}


.orange-background{
    background-color: map-get($background,orange);
}

.lightPrimaryText{
    @extend.text;
    color:map-get($lightPrimary,text)
}

.width-25{
    width:25%;
    justify-content: center;
    align-items: center;
}

.width-50{
    width:49%;
}

.width-100{
    width:100%
}


@media screen and (min-width:440px) {
    .p-dropdown-trigger {
        width: 1.5rem !important;
        opacity: 1;
    }
}

@media screen and (min-width:520px) {
    .button {
        padding: 0.65rem 1.083rem !important; // 0.5rem 0.833rem
    }

    .buttonContainer {
        justify-content: flex-end;
    }
}

@media screen and (min-width:768px) {
    /* body{
        font-size: 100%;
    } */

    /* input, .p-dropdown{
        font-size: 100% !important;
    } */

    /* .pi::before{
        font-size: 100%;
    } */

    .button {
        padding: 0.65rem 1.083rem !important;
    }



    .p-dropdown-trigger {
        width: 3rem !important;
    }

    .marginButton{
        margin: 8px !important;
    }

    .p-password {
        .p-inputtext {
            font-size: 100% !important;
        }

    }
}